import telebot, asyncio, subprocess, api_config # –ì–ª–∞–≤–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞
import bot_buttons.main_buttons as main_buttons # –§–∞–π–ª —Å –∫–Ω–æ–ø–∫–∞–º–∏ –±–æ—Ç–∞
import bot_buttons.folders_buttons as folders_buttons # –§–∞–π–ª —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–∞–ø–æ–∫
import bot_buttons.channels_buttons as channels_buttons
import main_core.search_folder as search_folders # –§–∞–π–ª –¥–ª—è –ø—Ä–æ–µ—Ä–∫–∏ –ø–∞–ø–æ–∫ –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º
import main_core.search_chanels as search_chanels # –§–∞–π–ª –¥–ª—è –ø—Ä–æ–µ—Ä–∫–∏ –ø–∞–ø–æ–∫ –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º
import main_core.statistics_kernel as statistics_kernel
import db_kernel.folders_kernel as folders_kernel # –§–∞–π–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞–ø–∫–∞–º–∏
import db_kernel.requests as db_requests
import db_kernel.channels_kernel as channels_kernel
from bs4 import BeautifulSoup
from telebot import types

async def main():
    bot = telebot.TeleBot(api_config.BOT_TOKEN) # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –¢–ì –±–æ—Ç—É —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω

    """
    –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü—è—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.
    –û–Ω–∞ –≤—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏.
    –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è /start.
    """
    @bot.message_handler(commands=['start'])
    def start_handler(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(chat_id=f"{api_config.SIGNALS_CHANNEL}", text=f"test", parse_mode='html')
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! \n\n–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å,")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≥–ª–∞–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
        main_markup = main_buttons.main_buttons()
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_markup)


    @bot.message_handler(commands=['help'])
    def help_handler(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é  
        bot.send_message(message.chat.id, message)

    @bot.message_handler(func=lambda message: message.text == '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
    def settings_message_handler(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"."""
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        settings_markup = main_buttons.settings()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É.', parse_mode='html', reply_markup=settings_markup)

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        @bot.message_handler(func=lambda message: message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        def back_handler(message):
            bot.clear_step_handler_by_chat_id(chat_id=message.chat.id)
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"."""
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≥–ª–∞–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
            main_markup = main_buttons.main_buttons()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            bot.send_message(message.chat.id, f"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_markup)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–∞–ø–∫–∏"
        @bot.message_handler(func=lambda message: message.text == 'üìÇ –ü–∞–ø–∫–∏')
        def folders_handler(message):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–∞–ø–∫–∏"."""
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≥–ª–∞–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
            folders_markup_btns = folders_buttons.folders()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–ø–∏—Å–∫–µ –ø–∞–ø–æ–∫ –∏ —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫ –≤ –≤–∏–¥–µ –∫–Ω–æ–ø–æ–∫
            bot.send_message(message.chat.id, f"–í–æ—Ç –≤–∞—à —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∞–ø–æ–∫.", reply_markup=folders_markup_btns)

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –ø–∞–ø–æ–∫
            @bot.callback_query_handler(func=lambda call: 'folder:' in call.data)
            def folder_button_handler(call: types.CallbackQuery):
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ Folder: –≤ coll data
                # –ü–æ–ª—É—á–∞–µ–º ID –ø–∞–ø–∫–∏ –∏–∑ call.data
                folder_id = int(call.data.split('folder:')[1])
                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ
                folder = db_requests.select_folder_by_id(folder_id)
                # –°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–ø–∫–∏,  –ø–µ—Ä–µ–¥–∞—ë–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ —Å –¥–∞–Ω–Ω—ã–µ–∏ –ø–∞–ø–∫–∏
                markup = folders_buttons.folder_settings_button(folder)
                # –¢–µ–∫—Å—Ç –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–µ–¥–µ—Ç –±–æ—Ç
                # –¢–µ–∫—Å—Ç –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω—ã–Ω–µ—à–Ω–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –ø–∞–ø–∫–∏
                if folder[3] == 'disable':
                    status_text = '–°—Ç–∞—Ç—É—Å: üî¥ –ù–µ –∞–∫—Ç–∏–≤–µ–Ω'
                    about_status = '–ï—Å–ª–∏ –≤—ã –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç–µ –ø–∞–ø–∫—É, —Ç–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –≤ –Ω—ë–º –Ω–∞—Ö–æ–¥—è—Ç—Å—è –¥–æ–±–∞–≤—è—Ç—å—Å—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –±—É–¥—É—Ç –∞–∫—Ç–∏–≤–Ω—ã –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞.'
                else:
                    status_text = '–°—Ç–∞—Ç—É—Å: üü¢ –ê–∫—Ç–∏–≤–µ–Ω'
                    about_status = '–ï—Å–ª–∏ –≤—ã –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç–µ –ø–∞–ø–∫—É, —Ç–æ –≤—Å–µ –∫–∞–Ω–∞–ª—ã –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ –∏ –±—ã–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–º–∏, –±—É–¥—É—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.'
                bot_message = f'üìÇ –ü–∞–ø–∫–∞: {folder[2]}\n{status_text}\n–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å? –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.\n{about_status}'
                bot.send_message(call.message.chat.id, bot_message, parse_mode='html', reply_markup=markup)
                
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏–ª–∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏
                @bot.callback_query_handler(func=lambda call: 'folder_status' in call.data)
                def change_folder_status(call: types.CallbackQuery):
                    # –ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–∞–ø–∫–∏
                    # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Ç–µ–∫—Å—Ç –≤ call.data –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–∞–ø–∫–∏
                    # –ü–æ–ª—É—á–∏—Ç—å id –ø–∞–ø–∫–∏ –∏ —Å—Ç–∞—Ç—É—Å –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ –ø–æ–µ–º–µ–Ω—è—Ç—å –∏–∑ —Ç–µ–∫—Å—Ç–∞ call.data
                    folder_id = int(call.data.split(' ')[1])
                    status = call.data.split(' ')[2]
                    # –í—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–∞–ø–∫–∏
                    if status == 'active':
                        change_status_message = folders_kernel.activate_folder(folder_id)
                    elif status == 'disable':
                        change_status_message = folders_kernel.deactivate_folder(folder_id)

                    bot.send_message(call.message.chat.id, change_status_message, parse_mode='html')

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–æ–∏—Å–∫ –ü–∞–ø–∫–æ–∫"
        @bot.message_handler(func=lambda message: message.text == 'üîç –ü–æ–∏—Å–∫ –ü–∞–ø–æ–∫')
        def folders_search_handler(message):
            # –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –ø–∞–ø–∫–∏, –Ω–æ–≤—ã–µ –¥–æ–±–∞–≤–ª—è–µ—Ç, —Å—Ç–∞—Ä—ã–µ —É–±–∏—Ä–∞–µ—Ç –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            # –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞–ø–æ–∫
            folders = search_folders.result
            print(folders)
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –∏ —Å—Ç–∞—Ä—ã—Ö –ø–∞–ø–æ–∫, –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ –∏ —É–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ –≤–æ–∑–≤—Ä–æ—â–∞—è –º–∞—Å—Å–∏–≤ —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∏ —É–¥–∞–ª–µ–Ω–Ω—ã–º–∏
            returned_folders = folders_kernel.check_folders(folders)
            if type(returned_folders) == str:
                # –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É —á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞, –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –ø–æ–ª—É—á–∏–ª–∞ —Ç–µ–∫—Å—Ç –≤–º–µ—Å—Ç–æ –º–∞—Å—Å–∏–≤–æ–≤
                bot.send_message(message.chat.id, returned_folders, parse_mode='html')
            else:
                # –í –∏–Ω–æ–º —Å–ª—É—á–∞–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å –∏–∑ 2—Ö –ø–µ—Ä–º–µ–Ω–Ω—ã—Ö, new_folders —Å–ª–æ–≤–∞—Ä—å (–∫–ª—é—á—å - –∑–Ω–∞—á–µ–Ω–∏–µ), –≤—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±—ä–µ–∫—Ç, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å, —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∏–Ω–¥–µ–∫—Å–∞
                # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
                added_folders_count = len(returned_folders['new_folders'])
                # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª—ë–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
                deleted_folders_count = len(returned_folders['deleted_folders'])

                messag_about_new_folders = ''
                if added_folders_count != 0:
                    messag_about_new_folders = '‚ùóÔ∏è –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏ –∏–º–µ—é –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å.\n'
                # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –∏ –ø—Ä–∏—Ü–µ–ø–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∫ —Ç–µ–∫—Å—Ç—É
                bot.send_message(message.chat.id, f'üü¢ –ë—ã–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ {added_folders_count} –ø–∞–ø–æ–∫.\nüî¥ –ë—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ {deleted_folders_count} –ø–∞–ø–æ–∫.\n{messag_about_new_folders}\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –ø–∞–ø–æ–∫, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üìÇ –ü–∞–ø–∫–∏"', parse_mode='html')
                # –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ —Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è Call data —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º Folder:id_folder
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–∞–Ω–∞–ª—ã"
    @bot.message_handler(func=lambda message: message.text == 'üìë –ö–∞–Ω–∞–ª—ã')
    def settings_channels_handlner(message):
        # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤ 
        channels = db_requests.select_all_channels()
        # –°–æ–∑–¥–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç–¥–ª—è –æ—Ç–æ–±—Ä–æ–∂–µ–Ω–∏—è –≤—Å–µ—Ö –∫–∞–Ω–∞–ª–æ–≤
        channels_group_message = ''
        # –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—Ç–∏–∏ —Å —Å—Ç–∞—Ç—É—Å–æ–º –∏ –∏–Ω–¥–µ–∫—Å–æ–º
        for channel in channels:
            if channel[4] == 'active':
                channels_group_message += f'üü¢ {channel[0]} - {channel[3]}\n'
            elif channel[4] == 'disable':
                channels_group_message += f'üî¥ {channel[0]} - {channel[3]}\n'
            elif channel[4] == 'test':
                channels_group_message += f'üü° {channel[0]} - {channel[3]} \n'

        bot.send_message(message.chat.id, f'–°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤:\n\n{channels_group_message}\n\n–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è, –≤–≤–µ–¥–∏—Ç–µ ‚Ññ –Ω—É–∂–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞.', parse_mode='html')
            
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ id
        @bot.message_handler(func=lambda message: message.text.isdigit())
        def channel_id_indentifity_handler(message):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç id
            id_flag = False

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∑–Ω–∞—á–µ–Ω–∏–µ–º int
            try:
                int(message.text)
                id_flag = True # –ï—Å–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è int —Ñ–æ—Ä–º–∞—Ç–æ–º
            except:
                id_flag = False
            if id_flag:
                # –ù–∞–ø–∏—Å–∞–Ω–Ω—ã–π id —Ä–∞–≤–µ–Ω id –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ
                channel_row_id = int(message.text)
                # –ù–∞–π—Ç–∏ –∫–∞–Ω–∞–ª –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–º—É id
                channel = db_requests.select_channels_by_row_id(channel_row_id)
                channels_group_message = ''
                if type(channel) is tuple:
                    # –ï—Å–ª–∏ id –±—ã–ª –Ω–∞–π–¥–µ–Ω
                    if channel[4] == 'active':
                        channels_group_message += f'üü¢ ID: {channel[2]} –ö–∞–Ω–∞–ª: {channel[3]}\n'
                    elif channel[4] == 'disable':
                        channels_group_message += f'üî¥ ID: {channel[2]} –ö–∞–Ω–∞–ª: {channel[3]}\n'
                    elif channel[4] == 'test':
                        channels_group_message += f'üü° ID: {channel[2]} –ö–∞–Ω–∞–ª: {channel[3]}\n'
                    
                    channel_markup = channels_buttons.channel_setting_buttons(channel[2])
                    
                    bot.send_message(message.chat.id, f'{channels_group_message}', parse_mode='html', reply_markup=channel_markup)
                else:
                    bot.send_message(message.chat.id, f'‚ùóÔ∏è–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∫–∞–Ω–∞–ª–∞ —Å —Ç–∞–∫–∏–º ID.\n–ù–∞–ø–∏—à–∏—Ç–µ Id –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –≤ —Å–ø–∏—Å–∫–µ.', parse_mode='html')
            else:
                bot.send_message(message.chat.id, f'‚ùóÔ∏è–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∫–∞–Ω–∞–ª–∞ —Å —Ç–∞–∫–∏–º ID.\n–ù–∞–ø–∏—à–∏—Ç–µ Id –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –≤ —Å–ø–∏—Å–∫–µ.', parse_mode='html')

                
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–Ω–∞–ª–∞
            @bot.callback_query_handler(func=lambda call: 'channel_change_status:' in call.data)
            def change_channel_status(call: types.CallbackQuery):
                # –ü–æ–ª—É—á–∞–µ—Ç –∏–∑ call.data –∑–Ω–∞—á–µ–Ω–∏—è id –∏ status
                channel_id = int(call.data.split(' ')[1])
                status = call.data.split(' ')[2]

                # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–Ω–∞–ª–∞
                returned_message = channels_kernel.change_channel_status(channel_id, status)

                if '–û—à–∏–±–∫–∞' in returned_message: # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–∞—à–ª–∞ –æ—à–∏–±–∫–∞
                    bot.send_message(message.chat.id, returned_message, parse_mode='html')
                else:    # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω
                    bot.send_message(message.chat.id, f'{returned_message}', parse_mode='html')
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    @bot.message_handler(func=lambda message: message.text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    def statistics_button(message):
        # –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É; —Ç—Ä–µ–Ω–¥ –∑–∞ —Å—É—Ç–∫–∏ (–ø—É–Ω–∫—Ç 6), —Å–∏–≥–Ω–∞–ª—ã (1 –ø—É–Ω–∫—Ç), –ø—Ä–æ–ø—É—Å–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ (3 –ø—É–Ω–∫—Ç)
        trends_message = statistics_kernel.long_and_short_for_last_day()
        signals_message = statistics_kernel.last_dwm_statistics()
        last_signals = statistics_kernel.last_signal_dates()
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
        markps = main_buttons.statistics()
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        bot.send_message(message.chat.id, f'-= –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ =-\n\n{trends_message}\n\n{signals_message}\n\n{last_signals}', parse_mode='html', reply_markup=markps)

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
        @bot.message_handler(func=lambda message: message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
        def back_handler(message):
            bot.clear_step_handler_by_chat_id(chat_id=message.chat.id)
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"."""
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≥–ª–∞–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
            main_markup = main_buttons.main_buttons()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            bot.send_message(message.chat.id, f"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_markup)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìà –°–∏–≥–Ω–∞–ª—ã –∑–∞ —Å—É—Ç–∫–∏"
        @bot.message_handler(func=lambda message: message.text == 'üìà –°–∏–≥–Ω–∞–ª—ã –∑–∞ —Å—É—Ç–∫–∏')
        def signals_for_day(message):
            bot.clear_step_handler_by_chat_id(chat_id=message.chat.id)
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–∏–≥–Ω–∞–ª—ã –∑–∞ —Å—É—Ç–∫–∏"."""
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–± —Å–∏–Ω–∞–ª–∞—Ö –∑—Ö–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—É—Ç–∫–∏
            last_day_signals = statistics_kernel.last_day_coins()


            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –∑–∞ —Å—É—Ç–∫–∏
            bot.send_message(message.chat.id, f"{last_day_signals}", parse_mode='html')

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìà –ö–∞–Ω–∞–ª—ã"
        @bot.message_handler(func=lambda message: message.text == 'üìà –ö–∞–Ω–∞–ª—ã')
        def statistics_channels(message):
            """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ –∫–Ω–æ–ø–∫–∏ –∫–∞–Ω–∞–ª—ã –≤ —Å–∞—Ç–∏—Å—Ç–∏–∫–∞—Ö"""
            # –ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∫–∞–Ω–∞–ª–∞—Ö –∏ –ø–∞–ø–∫–∞—Ö (–ø—É–Ω–∫—Ç 4)
            folders_and_channels_info = statistics_kernel.folders_and_channels_statistics()

            # –í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –ø–∞–ø–∫–∏—Ö –∏ –∫–∞–Ω–∞–ª–∞—Ö
            bot.send_message(message.chat.id, f"{folders_and_channels_info}", parse_mode='html')


    bot.polling(none_stop=True)

if __name__ == '__main__':
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
    asyncio.run(main())
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –µ–∂–µ–º–∏–Ω—É—Ç–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø–∞–ø–æ–∫ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    subprocess.Popen(["python", "folder_check_delay.py"]) 
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    subprocess.Popen(["python", "parser_run.py"]) 